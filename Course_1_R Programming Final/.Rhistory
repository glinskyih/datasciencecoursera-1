stop("invalid state")
}
validOutcomes <- c("heart failure", "heart attack", "pneumonia")
if (sum(outcome == validOutcomes)==0) {
stop("invalid outcome")
}
## Isolate input State data
stateRows <- data$State == state
dataForState <- data[stateRows,]
## Get outcome data
if (outcome == "heart failure") {
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
} else if (outcome == "heart attack"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
} else if (outcome == "pneumonia"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
}
bestMortality <- sort(as.numeric(mortality))
bestMortality
loc <- which.min(as.numeric(bestMortality))
bestMortality <- min(as.numeric(mortality))
best
bestMortality
loc <- which.min(as.numeric(bestMortality))
loc <- which.min(as.numeric(mortality))
class(loc)
hosp <- dataForState$Hospital.Name[loc]
class(hosp)
hosp
hosp <- dataForState$Hospital.Name[[loc]]
hosp
size(hosp)
ncol(hosp)
nrow(hosp)
dim(hosp)
as.character(hosp)
source("best.R")
best("TX","heart attack")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
View(dataForState)
tmp <- data[stateRows,]
dataForState <- tmp[order(tmp[,2)],]
tmp <- data[stateRows,]
dataForState <- tmp[order(tmp[,2]),]
## Get outcome data
if (outcome == "heart failure") {
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
} else if (outcome == "heart attack"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
} else if (outcome == "pneumonia"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
}
bestMortality <- min(as.numeric(mortality))
loc <- which.min(as.numeric(mortality))
hosp <- as.character(dataForState$Hospital.Name[loc])
hosp
source("best.R")
best("TX","heart failure")
best("MD","heart attack")
best("MD","pneumonia")
best("BB","heart attack")
best("NY","hert attack")
state <- "TX"
outcome <- "heart failure"
## Check that state and outcome are valid
if (is.element(as.factor(state) , data$State)==FALSE) {
stop("invalid state")
}
validOutcomes <- c("heart failure", "heart attack", "pneumonia")
if (sum(outcome == validOutcomes)==0) {
stop("invalid outcome")
}
## Isolate input State data
stateRows <- data$State == state
tmp <- data[stateRows,]
dataForState <- tmp[order(tmp[,2]),]
View(dataForState)
## Get outcome data
if (outcome == "heart failure") {
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
} else if (outcome == "heart attack"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
} else if (outcome == "pneumonia"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
}
mortality
summary(mortality)
bestMortality <- min(as.numeric(mortality))
bestMortality
?min
dataForState <- na.omit(tmp[order(tmp[,2]),])
dataForState <- na.exclude(tmp[order(tmp[,2]),])
dataForState <- tmp[order(tmp[,2]),]
## Get outcome data
if (outcome == "heart failure") {
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
} else if (outcome == "heart attack"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
} else if (outcome == "pneumonia"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
}
bestMortality <- min(as.numeric(mortality))
loc <- which.min(as.numeric(mortality))
dataForState[loc]
dataForState[loc,]
View(dataForState)
sort(mortality)
sort(mortality, decreasing = TRUE)
sort(mortality, decreasing = TRUE, na.last = TRUE)
tmp2 <- na.omit(dataForState)
View(tmp2)
rm(tmp2)
na.exlude(mortality)
na.exclude(mortality)
as.numeric(mortality)
factor(mortality)
is.factor(mortality)
min(mortality)
bestMortality <- min(levels(mortality)[mortality])
levels(mortality)[mortality]
bestMortality <- min(as.numeric(levels(mortality)[mortality]))
as.numeric(levels(mortality)[mortality])
levels(mortality)[mortality]
min(as.numeric(levels(mortality)[mortality],na.rm=TRUE))
bestMortality <- min(as.numeric(levels(mortality)[mortality],na.rm=TRUE))
as.numeric(levels(mortality)[mortality],na.rm=TRUE)
min(as.numeric(levels(mortality)[mortality]),,na.rm=TRUE)
which.min(as.numeric(levels(mortality)[mortality]),,na.rm=TRUE)
which.min(as.numeric(levels(mortality)[mortality]),na.rm=TRUE)
which.min(as.numeric(levels(mortality)[mortality]))
df <- data.frame(dataForState$Hospital.Name,mortality)
View(df)
df <- na.exclude(df)
df <- na.omit(df)
data <- read.csv("outcome-of-care-measures.csv",na.strings = "Not Available")
## Check that state and outcome are valid
if (is.element(as.factor(state) , data$State)==FALSE) {
stop("invalid state")
}
validOutcomes <- c("heart failure", "heart attack", "pneumonia")
if (sum(outcome == validOutcomes)==0) {
stop("invalid outcome")
}
## Isolate input State data
stateRows <- data$State == state
tmp <- data[stateRows,]
dataForState <- tmp[order(tmp[,2]),]
## Get outcome data
if (outcome == "heart failure") {
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
} else if (outcome == "heart attack"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
} else if (outcome == "pneumonia"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
}
df <- data.frame(dataForState$Hospital.Name,mortality)
loc <- which.min(as.numeric(levels(mortality)[mortality]))
which.min(mortality)
loc <- which.min(mortality)
hosp <- as.character(dataForState$Hospital.Name[loc])
source("best.R")
best("TX","heart attack")
best("TX","heart failure")
best("MD","heart attack")
best("MD","pneumonia")
state <- "TX"
outcome <- "heart attack"
outcome <- "heart failure"
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",na.strings = "Not Available")
## Check that state and outcome are valid
if (is.element(as.factor(state) , data$State)==FALSE) {
stop("invalid state")
}
validOutcomes <- c("heart failure", "heart attack", "pneumonia")
if (sum(outcome == validOutcomes)==0) {
stop("invalid outcome")
}
## Isolate input state data
stateRows <- data$State == state
tmp <- data[stateRows,]
dataForState <- tmp[order(tmp[,2]),]
## Get outcome data
if (outcome == "heart failure") {
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
} else if (outcome == "heart attack"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
} else if (outcome == "pneumonia"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
}
dataForState <- data.frame(dataForState[,2],mortality)
numHospsInState <- nrow(dataForState)
dataForState$rank <- c(1:numHospsInState)
head(dataForState)
dataForState <- order(dataForState[,3],dataForState[,2], decreasing = TRUE)
head(data)
head(dataForState)
dataForState <- data.frame(dataForState[,2],mortality)
dataForState <- tmp[order(tmp[,2]),]
dataForState <- data.frame(dataForState[,2],mortality)
dataForState[order(dataForState[,3],dataForState[,2], decreasing = TRUE)]
dataForState[ order(dataForState[,3],dataForState[,2], decreasing = TRUE), ]
a <- c(4, 3, 2, NA, 1)
b <- c(4, NA, 2, 7, 1)
z <- cbind(a, b)
(o <- order(a, b)); z[o, ]
(o <- order(a, b)); z[o, ]
(o <- order(a, b, na.last = FALSE)); z[o, ]
(o <- order(a, b, na.last = NA)); z[o, ]
dataForState[ order(dataForState[,3], na.last = NA, decreasing = TRUE), ]
dataForState[ order(dataForState[,2], na.last = NA, decreasing = TRUE), ]
dataForState <- data.frame(dataForState$Hospital.Name,mortality)
dataForState[ order(dataForState[,2], na.last = NA, decreasing = TRUE), ];
dataForState <- (dataForState[ order(dataForState[,2], na.last = NA, decreasing = TRUE), ]);
head(dataForState)
dataForState <- data.frame(dataForState$Hospital.Name,mortality)
tmp <- data[stateRows,]
dataForState <- tmp[order(tmp[,2]),]
dataForState <- data.frame(dataForState$Hospital.Name,mortality)
head(dataForState)
sortedDataForState <- dataForState[ order(dataForState[,2], na.last = NA, decreasing = TRUE), ]
head(sortedDataForState)
View(dataForState)
ncol(dataForState)
sortedDataForState <- dataForState[ order(dataForState[,2], na.last = NA, decreasing = FALSE), ]
head(sortedDataForState)
numHospsInState <- nrow(dataForState)
dataForState$rank <- c(1:numHospsInState)
sortedDataForState <- dataForState[ order(dataForState[,2], na.last = NA, decreasing = FALSE), ]
numHospsInState <- nrow(sortedDataForState)
sortedDataForState$rank <- c(1:numHospsInState)
head(sortedDataForState)
which.min(sortedDataForState$mortality)
which.max(mortality)
tail(sortedDataForState)
num = 3
rm(a)
rm(b)
rm(o)
rm(z)
loc <- which(sortedDataForState$rank == num)
hosp <- as.character(dataForState$Hospital.Name[loc])
hosp <- as.character(sortedDataForState$Hospital.Name[loc])
ortedDataForState$Hospital.Name[loc]
sortedDataForState$Hospital.Name[loc]
head(sortedDataForState)
sortedDataForState[loc,1]
as.character(sortedDataForState[loc,1])
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
rankhospital("MN","heart attack",3000)
state <- "MD"
outcome <- "heart attack"
num<- "worst"
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",na.strings = "Not Available")
## Check that state and outcome are valid
if (is.element(as.factor(state) , data$State)==FALSE) {
stop("invalid state")
}
validOutcomes <- c("heart failure", "heart attack", "pneumonia")
if (sum(outcome == validOutcomes)==0) {
stop("invalid outcome")
}
## Isolate input state data
stateRows <- data$State == state
tmp <- data[stateRows,]
dataForState <- tmp[order(tmp[,2]),]
## Get outcome data
if (outcome == "heart failure") {
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
} else if (outcome == "heart attack"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
} else if (outcome == "pneumonia"){
mortality <- dataForState$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
}
## simplify data frame, sort by increasing mortality, and add rank
dataForState <- data.frame(dataForState$Hospital.Name,mortality)
sortedDataForState <- dataForState[ order(dataForState[,2], na.last = NA, decreasing = FALSE), ]
numHospsInState <- nrow(sortedDataForState)
sortedDataForState$rank <- c(1:numHospsInState)
tail(sortedDataForState)
s.character(num)
is.character(num)
num == "worst"
which.max(mortality)
loc <- which.max(sortedDataForState$mortality)
hosp <- as.character(sortedDataForState[loc,1])
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv",na.strings = "Not Available")
class(data$State)
outcome <- "heart attack"
num <- "best"
## Check that outcome are valid
validOutcomes <- c("heart failure", "heart attack", "pneumonia")
if (sum(outcome == validOutcomes)==0) {
stop("invalid outcome")
}
## Get specific outcome data
if (outcome == "heart failure") {
mortality <- data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure
} else if (outcome == "heart attack"){
mortality <- data$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
} else if (outcome == "pneumonia"){
mortality <- data$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
}
data$State
simpleData <- data.frame(data$State,data$Hospital.Name,mortality)
colNmaes(simpleData) <- c("State",'Hospital.Name','Mortality')
simpleData <- data.frame(data$State,data$Hospital.Name,mortality)
colNames(simpleData) <- c("State",'Hospital.Name','Mortality')
colnames(simpleData) <- c("State",'Hospital.Name','Mortality')
View(simpleData)
simpleData <- simpleData[order(simpleData[,2]),]
simpleData <- simpleData[order(simpleData[,1],simpleData[,2]),]
levels(simpleData$State)
dim(levels(simpleData$State))
nrow(levels(simpleData$State))
size(levels(simpleData$State))
levels(simpleData$State)
x<-levels(simpleData$State)
length(x)
length(levels(simpleData$State))
numStates = length(levels(simpleData$State))
stateNames = levels(simpleData$State)
numStates = length(stateNames)
stateNames
class(simpleData$State)
i<-1
stateNames[i]
stateRows <- simpleData$State == stateNames[i]
tmp <- simpleData[stateRows,]
View(tmp)
tmp <- tmp[order(tmp[,3],simpleData[,2]),]
tmp <- tmp[order(tmp[,3],tmp[,2]),]
length(tmp)
dim(tmp)
nrow(tmp)
tmp$rank <- c(1:nrow(tmp))
if (is.character(num) && num == "best"){
loc <- which.min(simpleData$mortality)
hosp <- as.character(simpleData[loc,1])
} else if (is.character(num) && num == "worst") {
loc <- which.max(simpleData$mortality)
hosp <- as.character(simpleData[loc,1])
} else if (is.numeric(num) && num > nrow(tmp)) {
hosp <- NA
} else if (is.numeric(num) && num <= nrow(tmp)){
loc <- which(simpleData$rank == num)
hosp <- as.character(simpleData[loc,1])
}
num
View(simpleData)
loc <- which.min(simpleData$Mortality)
if (is.character(num) && num == "best"){
loc <- which.min(tmp$Mortality)
hosp <- as.character(tmp[loc,1])
} else if (is.character(num) && num == "worst") {
loc <- which.max(tmp$Mortality)
hosp <- as.character(tmp[loc,1])
} else if (is.numeric(num) && num > nrow(tmp)) {
hosp <- NA
} else if (is.numeric(num) && num <= nrow(tmp)){
loc <- which(tmp$rank == num)
hosp <- as.character(tmp[loc,1])
}
if (is.character(num) && num == "best"){
loc <- which.min(tmp$Mortality)
hosp <- as.character(tmp[loc,2])
} else if (is.character(num) && num == "worst") {
loc <- which.max(tmp$Mortality)
hosp <- as.character(tmp[loc,2])
} else if (is.numeric(num) && num > nrow(tmp)) {
hosp <- NA
} else if (is.numeric(num) && num <= nrow(tmp)){
loc <- which(tmp$rank == num)
hosp <- as.character(tmp[loc,2])
}
rankedHospitals = data.frame()
stateNames[i]
hosp
cbind(stateNames[i],hosp)
rankedHospitals[i,c(1:2)] <- cbind(stateNames[i],hosp)
rankedHospitals[i,c(1:2)]
rm(rankedHospitals)
rankedHospitals[i,c(1:2)] <- cbind(stateNames[i],hosp)
rankedHospitals[i,] <- cbind(stateNames[i],hosp)
rankedHospitals = data.frame(Hospital = character(), State = factor())
rankedHospitals
cbind(hosp,stateNames[i])
,as.factor(stateNames[i])
as.factor(stateNames[i])
cbind(hosp,as.factor(stateNames[i]))
rankedHospitals[i,] <- cbind(hosp,stateNames[i])
rankedHospitals = data.frame(Hospital = character(), State = character())
rankedHospitals[i,] <- cbind(hosp,stateNames[i])
class(hosp)
class(stateNames)
View(rankedHospitals)
stateRows <- simpleData$State == stateNames[i]
tmp <- simpleData[stateRows,]
tmp <- tmp[order(tmp[,3],tmp[,2]),]
tmp$rank <- c(1:nrow(tmp))
if (is.character(num) && num == "best"){
loc <- which.min(tmp$Mortality)
hosp[i] <- as.character(tmp[loc,2])
} else if (is.character(num) && num == "worst") {
loc <- which.max(tmp$Mortality)
hosp[i] <- as.character(tmp[loc,2])
} else if (is.numeric(num) && num > nrow(tmp)) {
hosp[i] <- NA
} else if (is.numeric(num) && num <= nrow(tmp)){
loc <- which(tmp$rank == num)
hosp[i] <- as.character(tmp[loc,2])
}
for (i in numStates) {
stateRows <- simpleData$State == stateNames[i]
tmp <- simpleData[stateRows,]
tmp <- tmp[order(tmp[,3],tmp[,2]),]
tmp$rank <- c(1:nrow(tmp))
if (is.character(num) && num == "best"){
loc <- which.min(tmp$Mortality)
hosp[i] <- as.character(tmp[loc,2])
} else if (is.character(num) && num == "worst") {
loc <- which.max(tmp$Mortality)
hosp[i] <- as.character(tmp[loc,2])
} else if (is.numeric(num) && num > nrow(tmp)) {
hosp[i] <- NA
} else if (is.numeric(num) && num <= nrow(tmp)){
loc <- which(tmp$rank == num)
hosp[i] <- as.character(tmp[loc,2])
}
}
rankedHospitals = data.frame(Hospital = hosp, State = stateNames)
rankedHospitals
for (i = 1 in numStates) {
stateRows <- simpleData$State == stateNames[i]
tmp <- simpleData[stateRows,]
tmp <- tmp[order(tmp[,3],tmp[,2]),]
tmp$rank <- c(1:nrow(tmp))
if (is.character(num) && num == "best"){
loc <- which.min(tmp$Mortality)
hosp[i] <- as.character(tmp[loc,2])
} else if (is.character(num) && num == "worst") {
loc <- which.max(tmp$Mortality)
hosp[i] <- as.character(tmp[loc,2])
} else if (is.numeric(num) && num > nrow(tmp)) {
hosp[i] <- NA
} else if (is.numeric(num) && num <= nrow(tmp)){
loc <- which(tmp$rank == num)
hosp[i] <- as.character(tmp[loc,2])
}
}
for (i in 1:numStates) {
stateRows <- simpleData$State == stateNames[i]
tmp <- simpleData[stateRows,]
tmp <- tmp[order(tmp[,3],tmp[,2]),]
tmp$rank <- c(1:nrow(tmp))
if (is.character(num) && num == "best"){
loc <- which.min(tmp$Mortality)
hosp[i] <- as.character(tmp[loc,2])
} else if (is.character(num) && num == "worst") {
loc <- which.max(tmp$Mortality)
hosp[i] <- as.character(tmp[loc,2])
} else if (is.numeric(num) && num > nrow(tmp)) {
hosp[i] <- NA
} else if (is.numeric(num) && num <= nrow(tmp)){
loc <- which(tmp$rank == num)
hosp[i] <- as.character(tmp[loc,2])
}
}
rankedHospitals = data.frame(Hospital = hosp, State = stateNames)
View(rankedHospitals)
source("rankall.R")
head(rankall("heartattack",20),10)
head(rankall("heart attack",20),10)
hosp <- character(length(numStates))
source("rankall.R")
head(rankall("heart attack",20),10)
tail(rankall("pneumonia","worst"),3)
tail(rankall("heart failure"),10)
source("best.R")
source("rankhospital.R")
best("SC","heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r
source("rankall.R")
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
